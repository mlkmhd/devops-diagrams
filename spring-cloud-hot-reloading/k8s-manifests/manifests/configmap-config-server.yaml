apiVersion: v1
data:
  application.properties: |
    server.port=8888
  
    spring.profiles.active=git,vault,kubernetes
    
    spring.cloud.config.server.git.uri=ssh://git@github.com:mlkmhd/spring-cloud-sample-config.git
    spring.cloud.config.server.git.defaultLabel=master
    spring.cloud.config.server.git.skipSslValidation=true
    
    # Git Refresh Rate
    # You can control how often the config server will fetch updated configuration data from your Git backend by using spring.cloud.config.server.git.refreshRate.
    # The value of this property is specified in seconds.
    # By default the value is 0, meaning the config server will fetch updated configuration from the Git repo every time it is requested.
    spring.cloud.config.server.git.refreshRate=60
    
    spring.cloud.config.server.vault.host=vault
    spring.cloud.config.server.vault.port=8200
    spring.cloud.config.server.vault.scheme=http
    spring.cloud.config.server.vault.backend=secret
    spring.cloud.config.server.vault.default-key=application
    spring.cloud.config.server.vault.profile-separator=,
    spring.cloud.config.server.vault.authentication=TOKEN
    spring.cloud.config.server.vault.token=root
    spring.cloud.config.server.vault.kvVersion=2
    spring.cloud.vault.config.lifecycle.enabled=true
    spring.cloud.vault.config.lifecycle.min-renewal=10s
    spring.cloud.vault.config.lifecycle.expiry-threshold=1m
    
    spring.kafka.bootstrap-servers=kafka:9092
    spring.kafka.properties.security.protocol=SASL_PLAINTEXT
    spring.kafka.properties.sasl.mechanism=PLAIN
    spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="user1" password="6NqY4K4bJX";
    
    management.endpoints.web.exposure.include=*
    management.endpoint.health.show-details=always
    
    spring.cloud.bus.enabled=true
    
    spring.config.activate.on-cloud-platform=kubernetes
    spring.cloud.kubernetes.secrets.enableApi=true
    spring.config.import=optional:kubernetes:
    spring.cloud.kubernetes.config.enableApi=true
    spring.cloud.kubernetes.reload.enabled=true

kind: ConfigMap
metadata:
  labels:
    app: config-server
  name: config-server
